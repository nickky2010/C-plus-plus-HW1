//                          Курс.Объектно - ориентированное программирование на C++.
//                     Модуль 1. Введение в объектно - ориентированное программирование.
//                                            Домашнее задание №3.
//                                                 Задание 1.
// Разработать класс String, который в дальнейшем будет использоваться для работы со строками.Класс должен содержать :
//  -Конструктор по умолчанию, позволяющий создать строку длиной 80 символов;
//  -Конструктор, позволяющий создавать строку произвольного размера;
//  -Конструктор, который создаёт строку и инициализирует её строкой, полученной от пользователя.
// Необходимо создать деструктор.
// Класс должен содержать методы для ввода строк с клавиатуры и вывода строк на экран.
// Также нужно реализовать статическую функцию - член, которая будет возвращать количество созданных объектов строк.
#include <stdio.h>
#include <conio.h>
#include <iostream>
#include <string.h>
#include <windows.h>
using namespace std;
class String
{
private:
	char *str;
	int N1 = 80, N2, N3;
public:
	
	static int num_obj_str;       
	String()                      // конструктор по умолчанию
	{
		str = new char[N1+1];
		num_obj_str++;
	}
	String(int n)                // конструктор, позволяющий создавать строку произвольного размера
	{
		str = new char[n + 1];
		num_obj_str++;
		N2 = n+1;
	}
	String(const char *s)       // конструктор, который создаёт строку и инициализирует её строкой, полученной от пользователя
	{
		N3 = strlen(s) + 1;
		str = new char[N3];
		strcpy(str, s);
		num_obj_str++;
	}
	/*String(const String& ob)      // конструктор копии
	{
		str = new char;
		*str = *ob.str;           // значение копии
		int i = 0;
		while (ob.str[i] != '\0') {
			str[i] = ob.str[i];
			i++;
		}
		str[i] = '\0';
		num_obj_str++;
	}*/
	~String()                     // деструктор
	{
		delete str;
		num_obj_str--;
	}
	void inter()                  // метод для ввода строк с клавиатуры по умолчанию
	{ 
		int i = 0;
		char c;
		while ((c = getchar()) != '\n') {
			if (i < N1) {
				str[i] = c;
				i++;
			}
		}
		str[i] = '\0';
	}
	void inter(int n)             // метод для ввода строки произвольного размера с клавиатуры 
	{
		int i = 0;
		char c;
		while (cin.get() != '\n');
		while ((c = getchar()) != '\n') {
			if (i < n) {
				str[i] = c;
				i++;
			}
		}
		str[i] = '\0';
	}
	void show()                   // метод для вывода строки на экран
	{
		cout << str << endl; 
	}
	static int show_Num_obj_str() // статическая функция-член, которая будет возвращать количество созданных объектов строк
	{
		return num_obj_str;
	}
};
int String::num_obj_str = 0;

int main() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	cout << "Cоздаем 1 объект класса String...\n";
	String s1;                                                                          // создаем 1 объект класса String
	cout << "Количество созданных объектов строк = " << s1.num_obj_str << endl << endl;
	cout << "Метод для ввода строк с клавиатуры по умолчанию\n";
	cout << "Введите строку с клавиатуры по умолчанию: \n";
	s1.inter();
	cout << "Строка с клавиатуры по умолчанию: \n";
	s1.show();
	puts("====================================================================================");
	int n;
	cout << "Cоздаем 2 объект класса String...\n";
	cout << "Задайте размер строки: ";
	cin >> n;
	String s2(n);                                                                     // создаем 2 объект класса String
	cout << "Введите строку заданного размера: \n";
	s2.inter(n);
	cout << "Введенная строка произвольного размера: \n";
	s2.show();
	cout << "Количество созданных объектов строк = " << s2.num_obj_str << endl;
	puts("====================================================================================");
	cout << "Cоздаем 3 объект класса String...\n";
	char st[100];
	cout << "Введите строку: \n";
	std::cin.getline (st, 101);
	String s3(st);                                                                     // создаем 3 объект класса String
	cout << "\nCтрока введенная пользователем: \n";
	s3.show();
	cout << "Количество созданных объектов строк = " << s3.num_obj_str << endl;
	/*puts("====================================================================================");
	cout << "Cоздаем 4 объект класса String...\nКопируем строку 2 объекта в 4 объект...\n";
	String s4 = s2;
	cout << "Исходная строка 4 объекта:\n";
	s4.show();
	puts("====================================================================================");
	cout << "Cоздаем 5 объект класса String...\nКопируем строку 3 объекта в 5 объект...\n";
	String s5 = s3;
	cout << "Исходная строка 5 объекта:\n";
	s5.show();
	cout << "Количество созданных объектов строк = " << s3.num_obj_str << endl << endl;*/
	system("pause");
	return 0;
}
